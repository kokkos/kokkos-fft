# Check if Docker images have changed. In that case, propose images tag. This
# workflow can only be invoked through another workflow, or manually.

name: Check Docker files

on:
  workflow_call:
    inputs:
      event_name:
        description: "Event name of the calling workflow"
        required: true
        type: string

    outputs:
      docker_files_have_changed:
        description: "True if any Docker file was modified"
        value: ${{ jobs.check_docker_files.outputs.docker_files_have_changed }}
      image_tag:
        description: "Tag of the images"
        value: ${{ jobs.check_docker_files.outputs.image_tag }}

jobs:
  check_docker_files:
    runs-on: ubuntu-latest

    outputs:
      # true if any Docker file was modified in the PR (PR mode) or since last pushed commit (push mode)
      docker_files_have_changed: ${{ steps.get_changed_docker_files.outputs.any_changed == 'true' }}
      # use "<hash>" as image name tag if on PR mode and if any Docker file was modified, otherwise use "main";
      # this is intended to distinguish PR images from each other
      image_tag: ${{ steps.get_changed_docker_files.outputs.any_changed == 'true' && inputs.event_name == 'pull_request' && github.sha || 'main' }}

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get changed Docker files
        id: get_changed_docker_files
        uses: tj-actions/changed-files@v42
        with:
          files: docker/**/Dockerfile

      - name: List changed Docker files
        if: ${{ steps.get_changed_docker_files.outputs.any_changed == 'true' }}
        env:
          ALL_CHANGED_FILES: ${{ steps.get_changed_docker_files.outputs.all_changed_files }}
        run: |
          for file in $ALL_CHANGED_FILES; do
            echo "$file was changed"
          done
