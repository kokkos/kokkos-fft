@ARTICLE{Trott2021,
author={Trott, Christian and Berger-Vergiat, Luc and Poliakoff, David and Rajamanickam, Sivasankaran and Lebrun-Grandie, Damien and Madsen, Jonathan and Al Awar, Nader and Gligoric, Milos and Shipman, Galen and Womeldorff, Geoff},
journal={ Computing in Science \& Engineering },
title={{ The Kokkos EcoSystem: Comprehensive Performance Portability for High Performance Computing }},
year={2021},
volume={23},
number={05},
ISSN={1558-366X},
pages={10-18},
abstract={ State-of-the-art engineering and science codes have grown in complexity dramatically over the last two decades. Application teams have adopted more sophisticated development strategies, leveraging third party libraries, deploying comprehensive testing, and using advanced debugging and profiling tools. In today’s environment of diverse hardware platforms, these applications also desire performance portability—avoiding the need to duplicate work for various platforms. The Kokkos EcoSystem provides that portable software stack. Based on the Kokkos Core Programming Model, the EcoSystem provides math libraries, interoperability capabilities with Python and Fortran, and Tools for analyzing, debugging, and optimizing applications. In this article, we overview the components, discuss some specific use cases, and highlight how codesigning these components enables a more developer friendly experience. },
keywords={High performance computing;Performance evaluation;Programming;Computer architecture;Debugging;Ecosystems},
doi={10.1109/MCSE.2021.3098509},
url = {https://doi.ieeecomputersociety.org/10.1109/MCSE.2021.3098509},
publisher={IEEE Computer Society},
address={Los Alamitos, CA, USA},
month=sep}

@ARTICLE{Rockmore2000,
  author={Rockmore, D.N.},
  journal={Computing in Science & Engineering}, 
  title={The FFT: an algorithm the whole family can use}, 
  year={2000},
  volume={2},
  number={1},
  pages={60-64},
  keywords={Discrete Fourier transforms;Equations;Signal processing algorithms;Fast Fourier transforms;Mathematics;Orbital calculations;Convolution;Information processing;Internet;Modems},
  doi={10.1109/5992.814659}}

@ARTICLE{Trott2022,
  author={Trott, Christian R. and Lebrun-Grandi{\'e}, Damien and Arndt, Daniel and Ciesko, Jan and Dang, Vinh and Ellingwood, Nathan and Gayatri, Rahulkumar and Harvey, Evan and Hollman, Daisy S. and Ibanez, Dan and Liber, Nevin and Madsen, Jonathan and Miles, Jeff and Poliakoff, David and Powell, Amy and Rajamanickam, Sivasankaran and Simberg, Mikael and Sunderland, Dan and Turcksin, Bruno and Wilke, Jeremiah},
  journal={IEEE Transactions on Parallel and Distributed Systems}, 
  title={Kokkos 3: Programming Model Extensions for the Exascale Era}, 
  year={2022},
  volume={33},
  number={4},
  pages={805-817},
  keywords={Programming;Hardware;Kernel;Graphics processing units;Layout;Laboratories;Benchmark testing;Performance portability;programming models;high-performance computing;heterogeneous computing;exascale},
  doi={10.1109/TPDS.2021.3097283}}

@Article{Harris2020,
 title         = {Array programming with {NumPy}},
 author        = {Charles R. Harris and K. Jarrod Millman and St{\'{e}}fan J.
                 van der Walt and Ralf Gommers and Pauli Virtanen and David
                 Cournapeau and Eric Wieser and Julian Taylor and Sebastian
                 Berg and Nathaniel J. Smith and Robert Kern and Matti Picus
                 and Stephan Hoyer and Marten H. van Kerkwijk and Matthew
                 Brett and Allan Haldane and Jaime Fern{\'{a}}ndez del
                 R{\'{i}}o and Mark Wiebe and Pearu Peterson and Pierre
                 G{\'{e}}rard-Marchant and Kevin Sheppard and Tyler Reddy and
                 Warren Weckesser and Hameer Abbasi and Christoph Gohlke and
                 Travis E. Oliphant},
 year          = {2020},
 month         = sep,
 journal       = {Nature},
 volume        = {585},
 number        = {7825},
 pages         = {357--362},
 doi           = {10.1038/s41586-020-2649-2},
 publisher     = {Springer Science and Business Media {LLC}},
 url           = {https://doi.org/10.1038/s41586-020-2649-2}
}

@article{Mohanan2019,
 abstract = {The Python package fluidfft provides a common Python API for performing Fast Fourier Transforms (FFT) in sequential, in parallel and on GPU with different FFT libraries (FFTW, P3DFFT, PFFT, cuFFT). fluidfft is a comprehensive FFT framework which allows Python users to easily and efficiently perform FFT and the associated tasks, such as computing linear operators and energy spectra. We describe the architecture of the package composed of C++ and Cython FFT classes, Python “operator” classes and Pythran functions. The package supplies utilities to easily test itself and benchmark the different FFT solutions for a particular case and on a particular machine. We present a performance scaling analysis on three different computing clusters and a microbenchmark showing that fluidfft is an interesting solution to write efficient Python applications using FFT. Funding statement: This project has indirectly benefited from funding from the foundation Simone et Cino Del Duca de l’Institut de France, the European Research Council (ERC) under the European Union’s Horizon 2020 research and innovation program (grant agreement No 647018-WATU and Euhit consortium) and the Swedish Research Council (Vetenskapsrådet): 2013–5191. We have also been able to use supercomputers of CIMENT/GRICAD, CINES/GENCI (grant 2018-A0040107567) and the Swedish National Infrastructure for Computing (SNIC).},
 author = {Mohanan, Ashwin Vishnu and Bonamy, Cyrille and Augier, Pierre},
 doi = {10.5334/jors.238},
 journal = {Journal of Open Research Software},
 keyword = {en_US},
 month = {Apr},
 title = {FluidFFT: Common API (C++ and Python) for Fast Fourier Transform HPC Libraries},
 year = {2019}
}

@software{jax2018github,
  author = {James Bradbury and Roy Frostig and Peter Hawkins and Matthew James Johnson and Chris Leary and Dougal Maclaurin and George Necula and Adam Paszke and Jake Vander{P}las and Skye Wanderman-{M}ilne and Qiao Zhang},
  title = {{JAX}: composable transformations of {P}ython+{N}um{P}y programs},
  url = {http://github.com/jax-ml/jax},
  version = {0.3.13},
  year = {2018},
}

@article{Wakatani1984,
    author = {Wakatani, Masahiro and Hasegawa, Akira},
    title = {A collisional drift wave description of plasma edge turbulence},
    journal = {The Physics of Fluids},
    volume = {27},
    number = {3},
    pages = {611-618},
    year = {1984},
    month = {03},
    abstract = {Model mode‐coupling equations for the resistive drift wave instability are numerically solved for realistic parameters found in tokamak edge plasmas. The Bohm diffusion is found to result if the parallel wavenumber is chosen to maximize the growth rate for a given value of the perpendicular wavenumber. The saturated turbulence energy has a broad frequency spectrum with a large fluctuation level proportional to κ̄ (=ρs/Ln, the normalized inverse scale length of the density gradient) and a wavenumber spectrum of the two‐dimensional Kolmogorov–Kraichnan type, ∼k−3.},
    issn = {0031-9171},
    doi = {10.1063/1.864660},
    url = {https://doi.org/10.1063/1.864660},
    eprint = {https://pubs.aip.org/aip/pfl/article-pdf/27/3/611/12476138/611\_1\_online.pdf},
}
